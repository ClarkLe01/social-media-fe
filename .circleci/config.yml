# CircleCI configuration file
version: 2.1
orbs:
  docker: circleci/docker@2.2.0
  aws-ecr: circleci/aws-ecr@8.1.2 # use the AWS ECR orb
  aws-ecs: circleci/aws-ecs@3.2.0 # use the AWS ECS orb
  aws-cli: circleci/aws-cli@3.1.1 # use the AWS CLI orb
  jira: circleci/jira@1.3.1
executors:
  frontend-executor:
    docker:
      - image: cimg/node:16.13

jobs:
  # Job one with a unique name
  test-frontend:
    executor: frontend-executor
    environment:
      DEBUG: 1
      API_HOST: localhost
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - run:
          name: npm-install
          command: npm install
      - run:
          name: Run tests
          command: npm run test -- --coverage --watchAll=false
      - store_artifacts:
          path: coverage

  build-and-push-frontend:
    executor: docker/docker
    environment:
      DEBUG: 1
      API_HOST: localhost
      DOCKER_IMAGE: waflol/social-media-fe
      DOCKER_TAG: lastest
    steps:
      - setup_remote_docker
      - checkout
      - docker/check:
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASSWORD
      - run:
          name: docker/build
          command: |
            docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
      - docker/push:
          digest-path: /tmp/digest.txt
          image: $DOCKER_IMAGE
          tag: $DOCKER_TAG
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"
  build-and-push-ecr:
    executor: aws-cli/default
    steps:
      - aws-cli/install
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
workflows:
  # Name of workflow
  frontend-pipeline:
    # List of jobs that will run
    jobs:
      - test-frontend:
          post-steps:
            - jira/notify:
                environment_type: testing
                job_type: build

      - build-and-push-frontend:
          requires:
            - test-frontend
          filters:
            branches:
              only:
                - main
          post-steps:
            - jira/notify:
                environment_type: development
                job_type: build

      - aws-ecr/build-and-push-image: 
          requires:
            - test-frontend
          dockerfile: Dockerfile
          path: .
          profile-name: waflol
          repo: social-media-fe
          tag: latest
          filters:
            branches:
              only:
                - main
          post-steps:
            - jira/notify:
                environment_type: development
                job_type: build